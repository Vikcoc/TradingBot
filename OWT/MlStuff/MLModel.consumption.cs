// This file was auto-generated by ML.NET Model Builder. 

using Microsoft.ML;
using Microsoft.ML.Data;
using Microsoft.ML.Transforms.TimeSeries;

namespace OWT;

public partial class MLModel
{
    private static readonly string MLNetModelPath = Path.GetFullPath(@"D:\Trails\TradingBot\OWT\MlStuff\MLModel.zip");

    public static readonly Lazy<TimeSeriesPredictionEngine<ModelInput, ModelOutput>> PredictEngine =
        new(() => CreatePredictEngine(), true);

    /// <summary>
    ///     Use this method to predict on <see cref="ModelInput" />.
    /// </summary>
    /// <param name="input">model input.</param>
    /// <returns>
    ///     <seealso cref=" ModelOutput" />
    /// </returns>
    public static ModelOutput Predict(ModelInput? input = null, int? horizon = null)
    {
        var predEngine = PredictEngine.Value;
        return predEngine.Predict(input, horizon);
    }

    private static TimeSeriesPredictionEngine<ModelInput, ModelOutput> CreatePredictEngine()
    {
        var mlContext = new MLContext();
        var mlModel = mlContext.Model.Load(MLNetModelPath, out var schema);
        return mlModel.CreateTimeSeriesEngine<ModelInput, ModelOutput>(mlContext);
    }

    /// <summary>
    ///     model input class for MLModel.
    /// </summary>

    #region model input class

    public class ModelInput
    {
        [ColumnName(@"col3")] public float Col3 { get; set; }
    }

    #endregion

    /// <summary>
    ///     model output class for MLModel.
    /// </summary>

    #region model output class

    public class ModelOutput
    {
        [ColumnName(@"col3")] public float[] Col3 { get; set; }

        [ColumnName(@"col3_LB")] public float[] Col3_LB { get; set; }

        [ColumnName(@"col3_UB")] public float[] Col3_UB { get; set; }
    }

    #endregion
}